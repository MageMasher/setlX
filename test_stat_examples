#!/bin/bash

# set overrides for setlX launcher script
export OVERRIDE_setlXJarDirectory="$PWD/interpreter/"
export SETLX_LIBRARY_PATH="$PWD/interpreter/setlXlibrary"
export OVERRIDE_setlXjavaParameters="-d64 -Xmx6144m"

setlXlaunchScript="$PWD/interpreter/setlX"
statExamples="$PWD/example_SetlX_code/stat_test_code"
pythonReferences="$PWD/example_SetlX_stat_code/stat_python_code"

tmpFile=$(mktemp -t setlx-XXXXXXXXXX)

started=0

# execute all test files
for file in `ls -I "*.reference" $statExamples`
    do
	outputFile=$(mktemp -t setlx-XXXXXXXXXX)

        started=$(bc <<< "$started + 1")
	echo -e "Starting test $started (${file%.*}).\n"

	"$setlXlaunchScript" $statExamples/$file > "$outputFile"

	message=""

	output=$(cat $outputFile)
	reference=0
	if [ -f $pythonReferences/${file%.*}".py.reference" ]
		then 
			reference=$(cat $pythonReferences/${file%.*}".py.reference")
	else
		echo -e "Could not find the corresponding python reference file. Did you update the python references by running './example_SetlX_stat_code/create_python_references'?\n"
		continue
	fi

	difference=1
	faultTolerance=10E-12

	if (( $(echo "$output > $reference" | bc -l) ));
		then difference=$(echo "scale=12;$output-$reference" | bc)
	else
		difference=$(echo "scale=12;$reference-$output" | bc)
	fi

	if (( $(echo "$difference < $faultTolerance" | bc) ));
	    then
		message="Test $started (${file%.*}) successful!\n"
	else
		message="Test $started (${file%.*}) failed ...\n"
	fi
	echo -e "$message"

	rm -f "$outputFile"
done

rm -f "$tmpFile"

