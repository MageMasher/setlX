load("baseIntegrationTest.stlx");
registerTestSuite("core_matrix_and_vector");

// ************************************************************************** \\

// Definition
// ----------

a := << <<1 2>> <<3 4>> >>;
b := << <<5 6>> <<7 8>> >>;
c := <<1 2 3>>;
d := <<5 6 7>>;
e := << <<1 2 3>> >>;
f := << <<1>> <<2>> <<3>> >>;

// matrix

registerTestResult(a * b == << <<19.0 22.0>> <<43.0 50.0>> >>, "a * b");
registerTestResult(a * 2 == << <<2.0 4.0>> <<6.0 8.0>> >>, "a * 2");
registerTestResult(a + b == << <<6.0 8.0>> <<10.0 12.0>> >>, "a + b");
registerTestResult(a - b == << <<-4.0 -4.0>> <<-4.0 -4.0>> >>, "a - b");
registerTestResult(a ** 3 == << <<37.0 54.0>> <<81.0 118.0>> >>, "a ** 3");

registerTestResult(a ** -1 == << <<-1.9999999999999998 1.0>> <<1.4999999999999998 -0.49999999999999994>> >>, "a ** -1");
registerTestResult(a! == << <<1.0 3.0>> <<2.0 4.0>> >>, "a!");
registerTestResult(la_det(a) == -2.0, "la_det(a)");
registerTestResult(la_solve(a, b) == << <<-3.0 -4.0>> <<4.0 5.0>> >>, "la_solve(a, b)");
registerTestResult(la_svd(a) == [<< <<0.4045535848337569 0.9145142956773045>> <<0.9145142956773045 -0.4045535848337569>> >>, << <<5.464985704219043 0.0>> <<0.0 0.3659661906262574>> >>, << <<0.5760484367663208 -0.8174155604703632>> <<0.8174155604703632 0.5760484367663208>> >>], "la_svd(a)");

registerTestResult(la_eigenValues(a) == [-0.3722813232690143, 5.372281323269014], "la_eigenValues(a)");
registerTestResult(la_eigenVectors(a) == [<<-0.8245648401323937 0.5657674649689923>>, <<-0.42222915041526043 -0.9230523142501933>>], "la_eigenVectors(a)");

registerTestResult(a[1] == <<1.0 2.0>>, "a[1]");
a[1] := [5.0,6.0];
registerTestResult(a == << <<1.0 2.0>> <<5.0 6.0>> >>, "a[1] := [5.0,6.0]; a");

// vector

registerTestResult(c * 2 == <<2.0 4.0 6.0>>, "c * 2");
registerTestResult(c + d == <<6.0 8.0 10.0>>, "c + d");
registerTestResult(c - d == <<-4.0 -4.0 -4.0>>, "c - d");
registerTestResult(c * d == 38.0, "c * d");
registerTestResult(c >< d == <<-4.0 8.0 -4.0>>, "c >< d");

registerTestResult(c[1] == 1.0, "c[1]");
d[1] := 9;
registerTestResult(d == <<9.0 6.0 7.0>>, "d[1] := 9; d");

// conversion
registerTestResult(la_vector(e) == <<1.0 2.0 3.0>>, "la_vector(e)");
registerTestResult(la_vector(f) == <<1.0 2.0 3.0>>, "la_vector(f)");
registerTestResult(la_matrix(c) == << <<1.0>> <<2.0>> <<3.0>> >>, "la_matrix(c)");

registerTestResult(f + c == << <<2.0>> <<4.0>> <<6.0>> >>, "f + c");
registerTestResult(f - d == << <<-8.0>> <<-4.0>> <<-4.0>> >>, "f - d");
registerTestResult(e * c == <<14.0>>, "e * c");

registerTestResult(c + e == <<2.0 4.0 6.0>>, "c + e");
registerTestResult(d - f == <<8.0 4.0 4.0>>, "d - f");
registerTestResult(c * e == 14.0, "c * e");

// ************************************************************************** \\

printTestResult();

